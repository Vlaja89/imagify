  /* Font Responsive Calculation */
  $font-min-width: 480; // min width needed for calculation
  $font-max-width: 1200; // max width to for calculation
  
  // Set min/max font sizes for each element
  $max-font-h1: 56;
  $min-font-h1: 36;

  $max-font-h2: 40;
  $min-font-h2: 32;

  $max-font-h3: 43;
  $min-font-h3: 35;

  $max-font-h4: 28;
  $min-font-h4: 24;
  
  $max-font-h5: 36;
  $min-font-h5: 26;
  
  $max-font-h6: 30;
  $min-font-h6: 20;

  $max-font-body: 18;
  $min-font-body: 15;

  $max-font-btn: 18;
  $min-font-btn: 14;

  $max-font-bann-p: 24;
  $min-font-bann-p: 20;

  // Fonts
  $fonts: (
    sizes: (
      h1: (
        max: $max-font-h1,
        min: $min-font-h1
      ),
      h2: (
        max: $max-font-h2,
        min: $min-font-h2 
      ),
      h3: (
        max: $max-font-h3,
        min: $min-font-h3 
      ),
      h4: (
        max: $max-font-h4,
        min: $min-font-h4 
      ),
      h5: (
        max: $max-font-h5,
        min: $min-font-h5 
      ),
      h6: (
        max: $max-font-h6,
        min: $min-font-h6 
      ),
      body: (
        max: $max-font-body,
        min: $min-font-body 
      ),
      '.custom-btn': (
        max: $max-font-btn,
        min: $min-font-btn
      ),
      '.bann-desc p': (
        max: $max-font-bann-p,
        min: $min-font-bann-p
      )
    )
  );
  
  // Key Values
  @function map-fetch($map, $keys) {
    $key: nth($keys, 1);
    $length: length($keys);
    $value: map-get($map, $key);
    @if ($length > 1) {
      $rest: ();
      @for $i from 2 through $length {
        $rest: append($rest, nth($keys, $i))
      }
      @return map-fetch($value, $rest)
    } @else {
      @return $value;
    }
  }
  
  // ITERATE THROUGH SIZES AND CREATE CLASSES ACCORDINGLY
  @each $size in map-keys(map-get($fonts, sizes)) {
    #{$size} { font-size: #{map-fetch($fonts, sizes $size min)}px; }
    @media (min-width: #{$font-min-width}px) and (max-width: #{$font-max-width}px){
      #{$size} { 
        font-size: calc( #{map-fetch($fonts, sizes $size min)}px + (#{map-fetch($fonts, sizes $size max )} - #{map-fetch($fonts, sizes $size min)}) * ( (100vw - #{$font-min-width}px) / ( #{$font-max-width} - #{$font-min-width}) ));
      }
    }
    @media (min-width: #{$font-max-width}px){
       #{$size} { 
         font-size: #{map-fetch($fonts, sizes $size max)}px;
       }
    }
  }
  

  /**** Typography ****/
h1 {
  color: $black;
  margin-bottom: 0;
  line-height: 1.3;
  padding-bottom: 25px;
  font-family: $font-bg-bold;
  letter-spacing: -0.005em;
  @media (max-width: 992px) {
    padding-bottom: 15px;
  }
}

h2 {
  color: $black;
  line-height: 1.3;
  margin-bottom: 0;
  padding-bottom: 15px;
  font-family: $font-bg-bold;
  letter-spacing: -0.005em;
}

h3 {
  color: $black;
  line-height: 1.3;
  margin-bottom: 0;
  padding-bottom: 15px;
  font-family: $font-bg-bold;
}

h4 {
  color: $black;
  line-height: 1.3;
  margin-bottom: 0;
  padding-bottom: 10px;
  font-family: $font-bg-bold;
}

h5 {
  color: $black;
  line-height: 1.3;
  margin-bottom: 0;
  padding-bottom: 15px;
  font-family: $font-bg-bold;
}

h6 {
  color: $black;
  line-height: 1.3;
  margin-bottom: 0;
  padding-bottom: 15px;
  font-family: $font-bg-bold;
}

p {
  color: $black;
  margin-bottom: 0;
  line-height: 1.3;
  font-family: $font-ssp-regular;
  padding-bottom: 15px;
}
